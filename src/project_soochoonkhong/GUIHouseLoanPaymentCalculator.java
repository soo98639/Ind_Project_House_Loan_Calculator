/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_soochoonkhong;

import java.text.SimpleDateFormat;
import java.util.*;
import java.io.*;

/**
 *
 * @author acer
 */
public class GUIHouseLoanPaymentCalculator extends javax.swing.JFrame {
    static ArrayList <HouseLoanPaymentCalculator> houseLoanArrayList = new ArrayList <HouseLoanPaymentCalculator>();
    static int index;
    
    public static void writeFile()throws IOException
    {
        FileWriter tulis = new FileWriter("HouseLoanPaymentInfo.txt");
        PrintWriter teks = new PrintWriter(tulis);

        for(HouseLoanPaymentCalculator h: houseLoanArrayList)
        {
            h.setCumInterest(0);
            h.setCumPrincipal(0);
            h.setInitialBalance(h.getHousePrice() - h.getDownPayment());
            teks.write("\t\t\tCustomer " + (houseLoanArrayList.indexOf(h)+1)
            + "\n" + h.loanInformationToString()
            + "\n==================== MONTHLY PAYMENT ==================\n"
            + "\t\t\t" + String.format("RM %.2f",h.getMonthlyPayment())
            + "\n=================== PAYMENT SCHEDULE ==================");
            if (paymentScheduleBasisCB.getSelectedItem().toString().equals("Monthly"))
            {
                teks.printf("\n%-10s %-17s %-11s %14s", "Month","Principal", "Interest", "Balance");
                teks.print("\n-------------------------------------------------------\n");
                for(int t = 1; t <= h.getLoanPeriod() * 12; t++)
                {
                    h.calculateInterest();
                    h.calculatePrincipal();
                    h.calculateBalance();
                    teks.printf("%-10s",t);
                    teks.print(h.generatePaymentSchedule() + "\n");
                }
            }
            else
            {
                teks.printf("\n%-10s %-17s %-11s %14s", "Year","Principal", "Interest", "Balance");
                teks.print("\n-------------------------------------------------------\n");
                for(int t = 1; t <= h.getLoanPeriod(); t++)
                {
                    for(int i = 1; i <= 12; i++)
                    {
                        h.calculateInterest();
                        h.calculatePrincipal();
                        h.calculateBalance();
                    }
                    teks.printf("%-10s",t);
                    teks.print(h.generatePaymentSchedule() + "\n");
                }
            }
            teks.print("-------------------------------------------------------\n\n");     
        }
        tulis.close();
    }
    
    public static void readFile()throws IOException
    {
        File inFile = new File("HouseLoanPaymentInfo.txt");
        Scanner scan = new Scanner(inFile);
        
        while(scan.hasNextLine())
        {
            String line = scan.nextLine();
            outputTA.append(line + "\n");
        }
        scan.close();
    }
    
    public void showDate()
    {
        SimpleDateFormat f = new SimpleDateFormat("dd / MM / yyyy");
        Date d = new Date();
        dateL.setText(f.format(d));
    }
  
    public GUIHouseLoanPaymentCalculator() {
        initComponents();
        setLocationRelativeTo(null);
        showDate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        exitBtn = new javax.swing.JButton();
        dateL = new javax.swing.JLabel();
        dateL1 = new javax.swing.JLabel();
        dateL2 = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        housePriceTF = new javax.swing.JTextField();
        dateL3 = new javax.swing.JLabel();
        dateL5 = new javax.swing.JLabel();
        downPaymentTF = new javax.swing.JTextField();
        dateL6 = new javax.swing.JLabel();
        loanPeriodTF = new javax.swing.JTextField();
        dateL7 = new javax.swing.JLabel();
        interestRateTF = new javax.swing.JTextField();
        dateL4 = new javax.swing.JLabel();
        dateL8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        paymentScheduleBasisCB = new javax.swing.JComboBox<>();
        dateL9 = new javax.swing.JLabel();
        dateL11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        deleteBtn = new javax.swing.JButton();
        displayAllBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        dateL10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTA = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("House Loan Payment Calculator");

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project_soochoonkhong/logo3.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Calisto MT", 1, 40)); // NOI18N
        jLabel2.setText("House Loan Payment Calculator");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(48, 48, 48)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addContainerGap())
        );

        exitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project_soochoonkhong/exitIcon2.png"))); // NOI18N
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        dateL.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        dateL.setText("Date");

        dateL1.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        dateL1.setText("Date");

        dateL2.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        dateL2.setText("Name:");

        nameTF.setFont(new java.awt.Font("Californian FB", 0, 18)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        housePriceTF.setFont(new java.awt.Font("Californian FB", 0, 18)); // NOI18N

        dateL3.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        dateL3.setText("House Price (RM)");

        dateL5.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        dateL5.setText("Down Payment (RM)");

        downPaymentTF.setFont(new java.awt.Font("Californian FB", 0, 18)); // NOI18N

        dateL6.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        dateL6.setText("Loan Period (Years)");

        loanPeriodTF.setFont(new java.awt.Font("Californian FB", 0, 18)); // NOI18N

        dateL7.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        dateL7.setText("Interest Rate (%)");

        interestRateTF.setFont(new java.awt.Font("Californian FB", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(dateL6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(loanPeriodTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(dateL3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(housePriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(dateL5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(downPaymentTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(dateL7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(interestRateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateL3)
                    .addComponent(housePriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateL5)
                    .addComponent(downPaymentTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dateL7)
                        .addComponent(interestRateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dateL6)
                        .addComponent(loanPeriodTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dateL4.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        dateL4.setText("Loan Information");

        dateL8.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        dateL8.setText("What result you want? ");

        jPanel4.setBackground(new java.awt.Color(153, 153, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        paymentScheduleBasisCB.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        paymentScheduleBasisCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yearly", "Monthly" }));
        paymentScheduleBasisCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentScheduleBasisCBActionPerformed(evt);
            }
        });

        dateL9.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        dateL9.setText("basis");

        dateL11.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        dateL11.setText("Payment Schedule in");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dateL11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(paymentScheduleBasisCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dateL9)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateL11)
                    .addComponent(paymentScheduleBasisCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateL9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(153, 153, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        deleteBtn.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.setToolTipText("");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        displayAllBtn.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        displayAllBtn.setText("Display All");
        displayAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAllBtnActionPerformed(evt);
            }
        });

        addBtn.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        addBtn.setText("Add");
        addBtn.setToolTipText("");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        updateBtn.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.setToolTipText("");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        resetBtn.setFont(new java.awt.Font("Californian FB", 1, 18)); // NOI18N
        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(addBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayAllBtn)
                .addGap(18, 18, 18)
                .addComponent(searchBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateBtn)
                .addGap(18, 18, 18)
                .addComponent(deleteBtn)
                .addGap(18, 18, 18)
                .addComponent(resetBtn)
                .addGap(21, 21, 21))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayAllBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        dateL10.setFont(new java.awt.Font("Calisto MT", 1, 30)); // NOI18N
        dateL10.setText("Result");

        jPanel6.setBackground(new java.awt.Color(153, 153, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        outputTA.setColumns(20);
        outputTA.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        outputTA.setRows(5);
        jScrollPane1.setViewportView(outputTA);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dateL2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(341, 341, 341)
                        .addComponent(dateL4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(374, 374, 374)
                        .addComponent(dateL10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(dateL1)
                                .addGap(31, 31, 31)
                                .addComponent(dateL))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(61, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(dateL8))
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dateL)
                                .addComponent(dateL1))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateL2)
                            .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateL4)
                .addGap(1, 1, 1)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateL8)
                .addGap(2, 2, 2)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateL10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        try
        {
            String name = nameTF.getText();
            double housePrice = Double.parseDouble(housePriceTF.getText());
            double downPayment = Double.parseDouble(downPaymentTF.getText());
            int loanPeriod = Integer.parseInt(loanPeriodTF.getText());
            double interestRate = Double.parseDouble(interestRateTF.getText());
            HouseLoanPaymentCalculator houseLoanPayment = new HouseLoanPaymentCalculator(name, housePrice, downPayment, interestRate, loanPeriod);
            houseLoanPayment.calculateMonthlyPayment();
            houseLoanPayment.setInitialBalance(housePrice - downPayment);
            houseLoanArrayList.add(houseLoanPayment);
            outputTA.setText(houseLoanPayment.loanInformationToString());
            outputTA.append("\n==================== MONTHLY PAYMENT ==================\n");
            outputTA.append("\t\t\t");
            outputTA.append(String.format("RM %.2f",houseLoanPayment.getMonthlyPayment()));
            outputTA.append("\n=================== PAYMENT SCHEDULE ==================");
            if (paymentScheduleBasisCB.getSelectedItem().toString().equals("Monthly"))
            {
                outputTA.append(String.format("\n%-10s %-17s %-11s %14s", "Month","Principal", "Interest", "Balance"));
                outputTA.append("\n-------------------------------------------------------\n");
                for(int t = 1; t <= loanPeriod * 12; t++)
                {
                    houseLoanPayment.calculateInterest();
                    houseLoanPayment.calculatePrincipal();
                    houseLoanPayment.calculateBalance();
                    outputTA.append(String.format("%-10s",t));
                    outputTA.append(houseLoanPayment.generatePaymentSchedule() + "\n");
                }
            }
            else
            {
                outputTA.append(String.format("\n%-10s %-17s %-11s %14s", "Year","Principal", "Interest", "Balance"));
                outputTA.append("\n-------------------------------------------------------\n");
                for(int t = 1; t <= loanPeriod; t++)
                {
                    for(int i = 1; i <= 12; i++)
                    {
                        houseLoanPayment.calculateInterest();
                        houseLoanPayment.calculatePrincipal();
                        houseLoanPayment.calculateBalance();
                    }
                    outputTA.append(String.format("%-10s",t));
                    outputTA.append(houseLoanPayment.generatePaymentSchedule() + "\n");
                }
            }
            outputTA.append("-------------------------------------------------------");
            writeFile();
            jOptionPane1.showMessageDialog(this, "Data has been saved successfully in text file.", "Information", jOptionPane1.INFORMATION_MESSAGE);
        }
        catch(Exception e)
        {
            jOptionPane1.showMessageDialog(this, "Please insert a valid input.", "Error", jOptionPane1.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        int confirmDialog = jOptionPane1.showConfirmDialog(this, "Are you sure?", "Exit?" , jOptionPane1.YES_NO_OPTION);
        
        if(confirmDialog == jOptionPane1.YES_OPTION)
        {
            System.exit(0);
        }else{}
    }//GEN-LAST:event_exitBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        try
        {
            boolean found = false;
            String search = jOptionPane1.showInputDialog("Enter the name of the meal that you want to update:");
            for(HouseLoanPaymentCalculator h: houseLoanArrayList)
            {
                if(h.getName().equals(search))
                {
                    index = houseLoanArrayList.indexOf(h);
                    nameTF.setText(h.getName());
                    housePriceTF.setText(String.valueOf(h.getHousePrice()));
                    downPaymentTF.setText(String.valueOf(h.getDownPayment()));
                    interestRateTF.setText(String.valueOf(h.getInterestRate()));
                    loanPeriodTF.setText(String.valueOf(h.getLoanPeriod()));
                    int loanPeriodInMonth = h.getLoanPeriod() * 12;
                    h.setCumInterest(0);
                    h.setCumPrincipal(0);
                    h.calculateMonthlyPayment();
                    h.setInitialBalance(h.getHousePrice() - h.getDownPayment());
                    outputTA.setText(h.loanInformationToString());
                    outputTA.append("\n==================== MONTHLY PAYMENT ==================\n");
                    outputTA.append("\t\t\t");
                    outputTA.append(String.format("RM %.2f",h.getMonthlyPayment()));
                    outputTA.append("\n=================== PAYMENT SCHEDULE ==================");
                    if (paymentScheduleBasisCB.getSelectedItem().toString().equals("Monthly"))
                    {
                        outputTA.append(String.format("\n%-10s %-17s %-11s %14s", "Month","Principal", "Interest", "Balance"));
                        outputTA.append("\n-------------------------------------------------------\n");
                        for(int t = 1; t <= loanPeriodInMonth; t++)
                        {
                            h.calculateInterest();
                            h.calculatePrincipal();
                            h.calculateBalance();
                            outputTA.append(String.format("%-10s",t));
                            outputTA.append(h.generatePaymentSchedule() + "\n");
                        }
                    }
                    else
                    {
                        outputTA.append(String.format("\n%-10s %-17s %-11s %14s", "Year","Principal", "Interest", "Balance"));
                        outputTA.append("\n-------------------------------------------------------\n");
                        for(int t = 1; t <= h.getLoanPeriod(); t++)
                        {
                            for(int i = 1; i <= 12; i++)
                            {
                                h.calculateInterest();
                                h.calculatePrincipal();
                                h.calculateBalance();
                            }
                            outputTA.append(String.format("%-10s",t));
                            outputTA.append(h.generatePaymentSchedule() + "\n");
                        }
                    }
                    outputTA.append("-------------------------------------------------------");
                    found = true;
                    jOptionPane1.showMessageDialog(this, "Data found. You could edit the data in text box, then click update button to update.", "Information", jOptionPane1.INFORMATION_MESSAGE);
                    break;
                }else{}
            }

            if(found == false)
            {
                jOptionPane1.showMessageDialog(this, "Sorry, the data is not found", "Error", jOptionPane1.ERROR_MESSAGE);
            }else{}
        }
        catch(Exception e)
        {
            jOptionPane1.showMessageDialog(this, "Error occured", "Error", jOptionPane1.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void displayAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAllBtnActionPerformed
        outputTA.setText(null);
        try
        {
            readFile();
            jOptionPane1.showMessageDialog(this, "Result shown.", "Information", jOptionPane1.INFORMATION_MESSAGE);
        }
        catch(Exception e)
        {
            jOptionPane1.showMessageDialog(this,"Error occured while reading the text file.", "Error", jOptionPane1.ERROR_MESSAGE);
        }  
    }//GEN-LAST:event_displayAllBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        nameTF.setText(null);
        housePriceTF.setText(null);
        downPaymentTF.setText(null);
        loanPeriodTF.setText(null);
        interestRateTF.setText(null);
        outputTA.setText(null);
        paymentScheduleBasisCB.setSelectedIndex(0);
    }//GEN-LAST:event_resetBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try{
            String name = nameTF.getText();
            double housePrice = Double.parseDouble(housePriceTF.getText());
            double downPayment = Double.parseDouble(downPaymentTF.getText());
            int loanPeriod = Integer.parseInt(loanPeriodTF.getText());
            double interestRate = Double.parseDouble(interestRateTF.getText());
            HouseLoanPaymentCalculator houseLoanPayment = new HouseLoanPaymentCalculator(name, housePrice, downPayment, interestRate, loanPeriod);
            houseLoanArrayList.set(index, houseLoanPayment);
            int loanPeriodInMonth = loanPeriod * 12;
            houseLoanPayment.calculateMonthlyPayment();
            houseLoanPayment.setInitialBalance(housePrice - downPayment);
            outputTA.setText(houseLoanPayment.loanInformationToString());
            outputTA.append("\n==================== MONTHLY PAYMENT ==================\n");
            outputTA.append("\t\t\t");
            outputTA.append(String.format("RM %.2f",houseLoanPayment.getMonthlyPayment()));
            outputTA.append("\n=================== PAYMENT SCHEDULE ==================");
            if (paymentScheduleBasisCB.getSelectedItem().toString().equals("Monthly"))
            {
                outputTA.append(String.format("\n%-10s %-17s %-11s %14s", "Month","Principal", "Interest", "Balance"));
                outputTA.append("\n-------------------------------------------------------\n");
                for(int t = 1; t <= loanPeriodInMonth; t++)
                {
                    houseLoanPayment.calculateInterest();
                    houseLoanPayment.calculatePrincipal();
                    houseLoanPayment.calculateBalance();
                    outputTA.append(String.format("%-10s",t));
                    outputTA.append(houseLoanPayment.generatePaymentSchedule() + "\n");
                }
            }
            else
            {
                outputTA.append(String.format("\n%-10s %-17s %-11s %14s", "Year","Principal", "Interest", "Balance"));
                outputTA.append("\n-------------------------------------------------------\n");
                for(int t = 1; t <= loanPeriod; t++)
                {
                    for(int i = 1; i <= 12; i++)
                    {
                        houseLoanPayment.calculateInterest();
                        houseLoanPayment.calculatePrincipal();
                        houseLoanPayment.calculateBalance();
                    }
                    outputTA.append(String.format("%-10s",t));
                    outputTA.append(houseLoanPayment.generatePaymentSchedule() + "\n");
                }
            }
            outputTA.append("-------------------------------------------------------");
            writeFile();
            jOptionPane1.showMessageDialog(this, "Data has been updated successfully", "Information", jOptionPane1.INFORMATION_MESSAGE);
        }
        catch (Exception e)
        {
            jOptionPane1.showMessageDialog(this, "Error occured", "Error", jOptionPane1.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        try
        {
            int dltIndex;
            boolean found = false;
            String delete = jOptionPane1.showInputDialog("Enter the name of the customer to delete:");
            for(HouseLoanPaymentCalculator h: houseLoanArrayList)
            {
                if(h.getName().equals(delete))
                {
                    dltIndex = houseLoanArrayList.indexOf(h);
                    jOptionPane1.showMessageDialog(this, "Data has been deleted successfully", "Information", jOptionPane1.INFORMATION_MESSAGE);
                    houseLoanArrayList.remove(dltIndex);
                    found = true;
                    writeFile();
                    break; 
                } 
            }
            if(found == false)    
            {
                jOptionPane1.showMessageDialog(this, "Sorry, the data is not found", "Error", jOptionPane1.ERROR_MESSAGE);
            }
        }
        catch (Exception e)
        {
            jOptionPane1.showMessageDialog(this, "Error occured", "Error", jOptionPane1.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void paymentScheduleBasisCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentScheduleBasisCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentScheduleBasisCBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIHouseLoanPaymentCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIHouseLoanPaymentCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIHouseLoanPaymentCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIHouseLoanPaymentCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIHouseLoanPaymentCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel dateL;
    private javax.swing.JLabel dateL1;
    private javax.swing.JLabel dateL10;
    private javax.swing.JLabel dateL11;
    private javax.swing.JLabel dateL2;
    private javax.swing.JLabel dateL3;
    private javax.swing.JLabel dateL4;
    private javax.swing.JLabel dateL5;
    private javax.swing.JLabel dateL6;
    private javax.swing.JLabel dateL7;
    private javax.swing.JLabel dateL8;
    private javax.swing.JLabel dateL9;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton displayAllBtn;
    private static javax.swing.JTextField downPaymentTF;
    private javax.swing.JButton exitBtn;
    private static javax.swing.JTextField housePriceTF;
    private javax.swing.JTextField interestRateTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextField loanPeriodTF;
    private javax.swing.JTextField nameTF;
    private static javax.swing.JTextArea outputTA;
    private static javax.swing.JComboBox<String> paymentScheduleBasisCB;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
